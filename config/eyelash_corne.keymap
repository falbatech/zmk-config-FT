#include <behaviors/num_word.dtsi> // urob's num word from zkm auto layer
#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1800  // 600, 1200
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        mmv {
            acceleration-exponent = <2>;      // 1
            time-to-max-speed-ms = <40>;    // 40
            delay-ms = <0>;                   // 0
        };

        shiftnextcaps: shiftnextcaps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&sk RIGHT_SHIFT>, <&kp CAPS>;

            label = "shiftnextcaps";
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <14 15 16 17 23 24 25 26>;
        };

        sk_mo: sk_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "SK_MO";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        sl_mo: sl_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "SL_MO";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "tap-preferred";
        };

        num_word: num_word {
            compatible = "zmk,behavior-auto-layer";
            #binding-cells = <1>;
            continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
            ignore-numbers;
        };

        smart_num: smart_num {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_NUM";
            bindings = <&mo>, <&num_word>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        ToBLT {
            bindings = <&to 4>;
            key-positions = <5 7>;
            layers = <0>;
        };

        ToMNCR {
            bindings = <&tog 6>;
            key-positions = <0 1>;
            layers = <0>;
        };

        ToNum {
            bindings = <&to 1>;
            key-positions = <46 24>;
            layers = <0>;
        };

        ToSymbol {
            bindings = <&to 2>;
            key-positions = <24 47>;
            layers = <0>;
        };

        ToNav {
            bindings = <&to 3>;
            key-positions = <44 16>;
            layers = <0>;
        };

        cmb_back {
            bindings = <&kp BACKSPACE>;
            key-positions = <23 24>;
        };

        cmb_del {
            bindings = <&kp DEL>;
            key-positions = <24 25>;
        };

        numplus {
            bindings = <&kp KP_PLUS>;
            key-positions = <37 38>;
            layers = <6 1>;
        };

        numminus {
            bindings = <&kp KP_MINUS>;
            key-positions = <38 39>;
            layers = <6 1>;
        };

        nummulti {
            bindings = <&kp KP_MULTIPLY>;
            key-positions = <9 8>;
            layers = <6 1>;
        };

        numdiv {
            bindings = <&kp KP_DIVIDE>;
            key-positions = <9 10>;
            layers = <6 1>;
        };

        cmb_caps {
            bindings = <&kp CAPS>;
            key-positions = <31 32>;
            layers = <0>;
        };

        smartcaps {
            bindings = <&caps_word>;
            key-positions = <16 17>;
            layers = <0>;
        };

        togblt {
            bindings = <&tog 4>;
            key-positions = <1 2>;
            layers = <0>;
        };
    };

    macros {
        middledot: middledot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N8 &kp KP_N3>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MIDDLEDOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEDH";
            bindings = <
&kp ESC    &kp Q            &kp W            &kp F         &kp P              &kp B                                   &kp UP                &kp J           &kp L               &kp U         &kp Y             &kp SQT           &kp GRAVE
&kp TAB    &hml LEFT_WIN A  &hml LEFT_ALT R  &hml LCTRL S  &hml LEFT_SHIFT T  &kp G                         &kp LEFT  &kp ENTER  &kp RIGHT  &kp M           &hml RIGHT_SHIFT N  &hml RCTRL E  &hml RIGHT_ALT I  &hml RIGHT_WIN O  &kp FSLH
&kp LCTRL  &kp Z            &kp X            &kp C         &kp D              &kp V        &kp LG(LA(K))              &kp DOWN              &kp K           &kp H               &kp COMMA     &kp DOT           &kp SEMI          &kp RET
                                             &kp LEFT_ALT  &lt 5 LG(SPACE)    &lt 3 SPACE                                                   &shiftnextcaps  &smart_num 1 1      &sl_mo 2 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "COLEDH";
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&to 0   &trans        &kp FSLH      &kp STAR      &kp N5        &kp LEFT_PARENTHESIS                        &trans          &kp RIGHT_PARENTHESIS  &kp NUMBER_6   &kp PLUS       &kp MINUS         &trans     &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp C_AL_CALCULATOR                 &trans  &trans  &trans  &kp EQUAL              &kp N7         &kp N8         &kp N9            &kp N0     &trans
&trans  &trans        &kp CARET     &kp PERCENT   &kp KP_DOT    &kp LEFT_BRACKET      &kp C_MUTE            &trans          &kp RIGHT_BRACKET      &kp LA(EQUAL)  &kp LESS_THAN  &kp GREATER_THAN  &kp COLON  &trans
                                    &trans        &kp COMMA     &trans                                                      &trans                 &kp PERIOD     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&to 0   &trans    &kp CARET    &kp STAR  &kp COLON   &trans                         &trans          &trans     &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &middledot  &kp TILDE
&trans  &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT            &trans  &trans  &trans  &kp MINUS  &kp EQUAL  &kp LBKT              &kp RBKT               &kp BSLH    &kp GRAVE
&trans  &trans    &trans       &trans    &trans      &trans       &trans            &trans          &kp UNDER  &kp PLUS   &kp LBRC              &kp RBRC               &kp PIPE    &kp RET
                               &trans    &trans      &trans                                         &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "NAV";
            bindings = <
&to 0      &kp F1          &kp F2          &mmv MOVE_UP    &kp F4              &kp F5                                  &mmv MOVE_UP                     &kp LC(Y)      &kp LC(C)  &kp UP         &kp LC(V)    &kp LC(Z)  &kp F11
&kp LC(A)  &kp F3          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT     &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LG(LS(D))  &kp LEFT   &kp DOWN       &kp RIGHT    &kp LC(X)  &kp F12
&trans     &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_DOWN  &msc SCRL_RIGHT     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp INSERT     &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp PAUSE_BREAK
                                           &trans          &kp K_CONTEXT_MENU  &trans                                                                   &mkp LCLK      &mkp RCLK  &mkp MCLK
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "NAV";
        };

        layer_4 {
            bindings = <
&to 0   &trans           &trans          &trans           &trans           &trans                          &trans          &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &trans  &trans  &bt BT_CLR
&trans  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4            &trans  &trans  &trans  &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans  &trans
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans        &trans            &trans          &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans  &trans  &trans
                                         &trans           &trans           &trans                                          &trans  &trans           &trans
            >;

            label = "BLTRGB";
            sensor-bindings = <&rgb_encoder>;
        };

        layer_5 {
            bindings = <
&trans  &trans      &trans          &trans      &kp F5   &trans                                      &mmv MOVE_UP                     &trans  &kp F6   &trans  &trans           &trans          &trans
&trans  &kp F1      &kp F2          &kp F3      &kp F4   &trans                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp F7   &kp F8  &kp F9           &kp F10         &trans
&trans  &kp C_STOP  &kp C_PREVIOUS  &kp C_NEXT  &kp F11  &kp C_PLAY_PAUSE  &trans                    &mmv MOVE_DOWN                   &trans  &kp F12  &trans  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK
                                    &trans      &trans   &trans                                                                       &trans  &trans   &trans
            >;

            label = "FUN";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_6 {
            bindings = <
&kp ESC    &trans  &kp E   &kp W   &kp F      &kp N1                              &mmv MOVE_UP                          &kp KP_NUMLOCK  &kp KP_NUMBER_7  &kp KP_N8  &kp KP_N9  &kp PRCNT   &trans
&to 0      &kp L   &kp A   &kp S   &kp D      &kp N2              &mmv MOVE_LEFT  &kp C_AL_CALCULATOR  &mmv MOVE_RIGHT  &mkp LCLK       &kp KP_N4        &kp KP_N5  &kp KP_N6  &trans      &trans
&kp LCTRL  &kp F1  &kp F2  &kp F3  &kp F4     &kp N3     &to 0                    &mmv MOVE_DOWN                        &mkp RCLK       &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_DOT  &kp KP_ENTER
                           &trans  &kp LSHFT  &kp SPACE                                                                 &mkp LCLK       &mkp RCLK        &kp KP_N0
            >;

            label = "MINECR";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
